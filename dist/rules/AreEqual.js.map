{"version":3,"file":"AreEqual.js","sourceRoot":"","sources":["../../src/app/rules/AreEqual.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAE,OAAO,EAAE,MAAM,2CAA2C,CAAC;AAEpE,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;;;;AAM1C;;;AAAA;IAA8B,4BAAU;IAIpC;;;;;;;MAOE;IACF,kBAAY,IAAY,EAAE,OAAe,EAAE,MAAiB,EAAE,UAAqB,EAAE,aAA6B;QAA7B,8BAAA,EAAA,oBAA6B;QAAlH,YACI,kBAAM,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,SAGtC;QAFG,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;KAChC;IAED,yBAAM,GAAN;QACI,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAwB,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACxB;QACD,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5C;mBAjCL;EAU8B,UAAU,EAwBvC,CAAA;;;;AAxBD,oBAwBC","sourcesContent":["import {CompareResult} from 'typescript-dotnet-commonjs/System/CompareResult';\r\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\r\n\r\nimport { SimpleRule } from './SimpleRule'; \r\nimport { RuleResult } from './RuleResult'; \r\nimport { Primitive } from './Primitive';\r\n\r\n/**\r\n * Use to determine if the target is equal to the comparison target.\r\n */\r\nexport class AreEqual extends SimpleRule {\r\n    target: Primitive;\r\n    comparison: Primitive;\r\n\r\n    /**\r\n     * The constructor for the [AreEqualRule] rule.\r\n     * @param name: The name of the rule.\r\n     * @param message: The message to display when the rule is violated.\r\n     * @param target: The target that the rules are evaluated against.\r\n     * @param comparison: The comparison target the rules are evaluated against.\r\n     * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [true].\r\n    */\r\n    constructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean = true) {\r\n        super(name, message, isDisplayable);\r\n        this.target = target;\r\n        this.comparison = comparison;\r\n    }\r\n\r\n    render() {\r\n        if (compare(this.target, this.comparison, true) !== CompareResult.Equal) {\r\n            this.isValid = false;\r\n        }\r\n        return new RuleResult(this, this.target);\r\n    }\r\n}\r\n"]}