{"version":3,"file":"AreEqual.js","sourceRoot":"","sources":["file:///B:/development/npmjs.com/angular-rules-engine/src/rules/AreEqual.ts"],"names":[],"mappings":";;;;;;AAEA,oEAAuE;AACvE,IAAO,OAAO,GAAG,QAAQ,CAAC;AAE1B,iCAAmC;AACnC,iCAAmC;AAGnC;IAA8B,4BAAU;IAIpC;;;;;;OAMG;IACH,kBAAY,IAAY,EAAE,OAAe,EAAE,MAAiB,EAAE,UAAqB,EAAE,aAA6B;QAA7B,8BAAA,EAAA,oBAA6B;QAAlH,YACA,kBAAM,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,SAGlC;QAFD,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;IAC7B,CAAC;IAED,yBAAM,GAAN;QACI,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,aAAmB,CAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,IAAI,kBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IACL,eAAC;AAAD,CAAC,AAvBD,CAA8B,kBAAU,GAuBvC;AAvBY,4BAAQ","sourcesContent":["import dCompareResult = require('typescript-dotnet-commonjs/System/CompareResult');\r\nimport CompareResult = dCompareResult.CompareResult;\r\nimport dCompare = require('typescript-dotnet-commonjs/System/Compare');\r\nimport Compare = dCompare;\r\n\r\nimport {SimpleRule} from './index';\r\nimport {RuleResult} from './index';\r\nimport {Primitive} from './index';\r\n\r\nexport class AreEqual extends SimpleRule {\r\n    target: Primitive;\r\n    comparison: Primitive;\r\n\r\n    /**\r\n     * The constructor for the [AreEqualRule] rule.\r\n     * @param name: The name of the rule.\r\n     * @param message: The message to display when the rule is violated.\r\n     * @param target: The target that the rules are evaluated against.\r\n     * @param comparison: The comparison target the rules are evaluated against.\r\n     */\r\n    constructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean = true) {\r\n    super(name, message, isDisplayable);\r\n    this.target = target;\r\n    this.comparison = comparison;\r\n    }\r\n\r\n    render() {\r\n        if (Compare.compare(this.target, this.comparison, true) !== CompareResult.Equal) {\r\n            this.isValid = false;\r\n        }\r\n        return new RuleResult(this, this.target);\r\n    }\r\n}\r\n"]}