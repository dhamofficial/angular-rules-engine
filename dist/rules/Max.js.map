{"version":3,"file":"Max.js","sourceRoot":"","sources":["../../src/app/rules/Max.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAE,OAAO,EAAE,MAAM,2CAA2C,CAAC;AAEpE,OAAO,EAAC,UAAU,EAAE,UAAU,EAAY,MAAM,SAAS,CAAC;;;;;AAM1D;;;;AAAA;IAAyB,uBAAU;IAI9B;;;;;;;KAOC;IACF,aAAY,IAAY,EAAE,OAAe,EAAE,MAAiB,EAAE,UAAqB,EAAE,aAA8B;QAA9B,8BAAA,EAAA,qBAA8B;QAAnH,YACI,kBAAM,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,SAGtC;QAFG,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;KAChC;IAED,oBAAM,GAAN;QACI,IAAI,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAChE,EAAE,CAAC,CAAC,aAAa,oBAA0B,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACxB;QACD,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5C;cAjCL;EASyB,UAAU,EAyBlC,CAAA;;;;;AAzBD,eAyBC","sourcesContent":["import CompareResult from 'typescript-dotnet-commonjs/System/CompareResult';\r\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\r\n\r\nimport {SimpleRule, RuleResult, Primitive} from './index';\r\n\r\n/**\r\n * Use the [Max] rule to determine if the target value is equal to or less than\r\n * the comparison value.\r\n */\r\nexport class Max extends SimpleRule {\r\n    target: Primitive;\r\n    comparison: Primitive;\r\n\r\n     /**\r\n     * The constructor for the [Max] rule.\r\n     * @param name: The name of the rule.\r\n     * @param message: The message to display when the rule is violated.\r\n     * @param target: The target that the rules are evaluated against.\r\n     * @param comparison: The comparison target the rules are evaluated against.\r\n     * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\r\n    */\r\n    constructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean = false) {\r\n        super(name, message, isDisplayable);\r\n        this.target = target;\r\n        this.comparison = comparison;\r\n    }\r\n\r\n    render() {\r\n        let compareResult = compare(this.target, this.comparison, true); \r\n        if (compareResult === CompareResult.Greater) {\r\n            this.isValid = false;\r\n        }\r\n        return new RuleResult(this, this.target);\r\n    }\r\n}\r\n"]}