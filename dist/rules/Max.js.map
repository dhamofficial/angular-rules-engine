{"version":3,"file":"Max.js","sourceRoot":"","sources":["file:///B:/development/angular-rules-engine/src/rules/Max.ts"],"names":[],"mappings":";;;;;;AAEA,IAAO,QAAQ,WAAW,2CAA2C,CAAC,CAAC;AACvE,IAAO,OAAO,GAAG,QAAQ,CAAC;AAE1B,sBAAyB,SAAS,CAAC,CAAA;AACnC,sBAAyB,SAAS,CAAC,CAAA;AAGnC;;;GAGG;AACH;IAAyB,uBAAU;IAI/B,aAAY,IAAY,EAAE,OAAe,EAAE,MAAiB,EAAE,UAAqB,EAAE,aAA8B;QAA9B,6BAA8B,GAA9B,qBAA8B;QAC/G,kBAAM,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,oBAAM,GAAN;QACI,IAAI,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACxE,EAAE,CAAC,CAAC,aAAa,KAAK,eAAqB,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,IAAI,kBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IACL,UAAC;AAAD,CAAC,AAjBD,CAAyB,kBAAU,GAiBlC;AAjBY,WAAG,MAiBf,CAAA","sourcesContent":["import dCompareResult = require('typescript-dotnet-commonjs/System/CompareResult');\nimport CompareResult = dCompareResult.CompareResult;\nimport dCompare = require('typescript-dotnet-commonjs/System/Compare');\nimport Compare = dCompare;\n\nimport {SimpleRule} from './index';\nimport {RuleResult} from './index';\nimport {Primitive} from './index';\n\n/**\n * Use the [Max] rule to determine if the target value is equal to or less than\n * the comparison value.\n */\nexport class Max extends SimpleRule {\n    target: Primitive;\n    comparison: Primitive;\n\n    constructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean = false) {\n        super(name, message, isDisplayable);\n        this.target = target;\n        this.comparison = comparison;\n    }\n\n    render() {\n        let compareResult = Compare.compare(this.target, this.comparison, true); \n        if (compareResult === CompareResult.Greater) {\n            this.isValid = false;\n        }\n        return new RuleResult(this, this.target);\n    }\n}\n"]}