{"version":3,"file":"ServiceMessage.js","sourceRoot":"","sources":["file:///B:/development/npmjs.com/angular-rules-engine/src/service/ServiceMessage.ts"],"names":[],"mappings":";AAEA;;GAEG;AACH;IAmBI,wBAAY,IAAY,EAAE,OAAe,EAAE,WAAyB,EAAE,MAAe,EAAE,aAAuB;QAE1G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAGD,uFAAuF;IACvF,wHAAwH;IAExH,GAAG;IAEH;;;OAGG;IACH,iCAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,oCAAW,GAAX,UAAY,OAAe;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,wCAAe,GAAf,UAAgB,WAAwB;QACpC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,mCAAU,GAAV,UAAW,MAAc;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,0CAAiB,GAAjB,UAAkB,aAAsB;QACpC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,iCAAQ,GAAR;QACI,MAAM,CAAC,WAAS,IAAI,CAAC,IAAI,mBAAc,IAAI,CAAC,OAAO,uBAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,kBAAa,IAAI,CAAC,MAAM,yBAAoB,IAAI,CAAC,aAAe,CAAC;IACrK,CAAC;IACL,qBAAC;AAAD,CAAC,AArFD,IAqFC;AArFY,wCAAc","sourcesContent":["import { MessageType } from './index';\r\n\r\n/**\r\n * Use this class to create a message for the current [ServiceContext].\r\n */\r\nexport class ServiceMessage{\r\n\r\n    Name: string;\r\n    Message: string;\r\n    MessageType: MessageType;\r\n    Source: string;\r\n    DisplayToUser: boolean;\r\n\r\n    /**\r\n     * The constructor for the [ServiceMessage]. \r\n     * @param name: The name of the message.\r\n     * @param message: The display text of the message.\r\n     * @param messageType: Indicates the type of message.\r\n     * @param source: Indicates the source of the message.\r\n     * @param displayToUser: Indicates if the message is displayable.\r\n     */ \r\n    constructor(name: string, message?: string)\r\n    constructor(name: string, message: string, messageType?: MessageType)\r\n    constructor(name: string, message: string, messageType?: MessageType, source?: string)\r\n    constructor(name: string, message: string, messageType?: MessageType, source?: string, displayToUser?: boolean)\r\n    {\r\n        this.Name = name;\r\n        this.Message = message;\r\n        this.MessageType = messageType;\r\n        this.Source = source;\r\n        this.DisplayToUser = displayToUser;        \r\n    }\r\n\r\n\r\n    //constructor(name: string, message: string, messageType: MessageType, source?: string)\r\n    //constructor(name: string, message: string, messageType: MessageType, source: string, displayToUser: boolean = false) {\r\n\r\n    //}\r\n\r\n    /**\r\n     * Use this extension method to add the name of the message.\r\n     * @param name: The name of the service message.\r\n     */\r\n    WithName(name: string) {\r\n        this.Name = name;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to add the message text to the ServiceMessage item.\r\n     * @param message: The display text of the service message.\r\n     */\r\n    WithMessage(message: string) {\r\n        this.Message = message;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to set the [MessageType] of the ServiceMessage item.\r\n     * @param messageType: Use to indicate the message type.\r\n     */\r\n    WithMessageType(messageType: MessageType) {\r\n        this.MessageType = messageType;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to set the [Source] of the ServiceMessage item.\r\n     * @param source: Use to indicate the source of the message.\r\n     */\r\n    WithSource(source: string) {\r\n        this.Source = source;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to set the [DisplayToUser] indicator of the ServiceMessage.\r\n     * @param displayToUser: A boolean value to indicate if the message can be displayed to the user.\r\n     */\r\n    WithDisplayToUser(displayToUser: boolean) {\r\n        this.DisplayToUser = displayToUser;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this method return a string representing the ServiceMessage.\r\n     */\r\n    toString() {\r\n        return `Name: ${this.Name}; Message: ${this.Message}; MessageType: ${this.MessageType.toString()}; Source: ${this.Source}; DisplayToUser: ${this.DisplayToUser}`;\r\n    }\r\n}"]}