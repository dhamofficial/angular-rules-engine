{"version":3,"file":"ServiceMessage.js","sourceRoot":"","sources":["../../src/app/service/ServiceMessage.ts"],"names":[],"mappings":";;;AAKA;;;AAAA;IAmBI,wBAAY,IAAY,EAAE,OAAe,EAAE,WAAyB,EAAE,MAAe,EAAE,aAA8B;QAA9B,8BAAA,EAAA,qBAA8B;QAEjH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,WAAW,GAAG,WAA0B,CAAC;SACjD;QACD,EAAE,CAAA,CAAC,MAAM,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,MAAgB,CAAC;SAClC;KACJ;IAED;;;OAGG;;;;;IACH,iCAAQ;;;;IAAR,UAAS,IAAY;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC;KACf;IAED;;;OAGG;;;;;IACH,oCAAW;;;;IAAX,UAAY,OAAe;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC;KACf;IAED;;;OAGG;;;;;IACH,wCAAe;;;;IAAf,UAAgB,WAAwB;QACpC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC;KACf;IAED;;;OAGG;;;;;IACH,mCAAU;;;;IAAV,UAAW,MAAc;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC;KACf;IAED;;;OAGG;;;;;IACH,0CAAiB;;;;IAAjB,UAAkB,aAAsB;QACpC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC;KACf;IAED;;OAEG;;;;IACH,iCAAQ;;;IAAR;QACI,MAAM,CAAC,WAAS,IAAI,CAAC,IAAI,mBAAc,IAAI,CAAC,OAAO,uBAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,kBAAa,IAAI,CAAC,MAAM,yBAAoB,IAAI,CAAC,aAAe,CAAC;KACpK;yBAtFL;IAuFC,CAAA;;;;AAlFD,0BAkFC","sourcesContent":["import { MessageType } from './MessageType';\r\n\r\n/**\r\n * Use this class to create a message for the current [ServiceContext].\r\n */\r\nexport class ServiceMessage{\r\n\r\n    Name: string;\r\n    Message: string;\r\n    MessageType: MessageType;\r\n    Source: string;\r\n    DisplayToUser: boolean;\r\n\r\n    /**\r\n     * The constructor for the [ServiceMessage]. \r\n     * @param name: The name of the message.\r\n     * @param message: The display text of the message.\r\n     * @param messageType: Indicates the type of message.\r\n     * @param source: Indicates the source of the message.\r\n     * @param displayToUser: Indicates if the message is displayable.\r\n     */ \r\n    constructor(name: string, message?: string)\r\n    constructor(name: string, message: string, messageType?: MessageType)\r\n    constructor(name: string, message: string, messageType?: MessageType, source?: string)\r\n    constructor(name: string, message: string, messageType?: MessageType, source?: string, displayToUser: boolean = false)\r\n    {\r\n        this.Name = name;\r\n        this.Message = message;\r\n        if(message) {\r\n            this.MessageType = messageType as MessageType;\r\n        }\r\n        if(source) {\r\n            this.Source = source as string;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to add the name of the message.\r\n     * @param name: The name of the service message.\r\n     */\r\n    WithName(name: string) {\r\n        this.Name = name;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to add the message text to the ServiceMessage item.\r\n     * @param message: The display text of the service message.\r\n     */\r\n    WithMessage(message: string) {\r\n        this.Message = message;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to set the [MessageType] of the ServiceMessage item.\r\n     * @param messageType: Use to indicate the message type.\r\n     */\r\n    WithMessageType(messageType: MessageType) {\r\n        this.MessageType = messageType;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to set the [Source] of the ServiceMessage item.\r\n     * @param source: Use to indicate the source of the message.\r\n     */\r\n    WithSource(source: string) {\r\n        this.Source = source;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this extension method to set the [DisplayToUser] indicator of the ServiceMessage.\r\n     * @param displayToUser: A boolean value to indicate if the message can be displayed to the user.\r\n     */\r\n    WithDisplayToUser(displayToUser: boolean) {\r\n        this.DisplayToUser = displayToUser;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Use this method return a string representing the ServiceMessage.\r\n     */\r\n    toString() {\r\n        return `Name: ${this.Name}; Message: ${this.Message}; MessageType: ${this.MessageType.toString()}; Source: ${this.Source}; DisplayToUser: ${this.DisplayToUser}`;\r\n    }\r\n}"]}