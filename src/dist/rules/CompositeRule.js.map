{"version":3,"file":"CompositeRule.js","sourceRoot":"","sources":["file:///c:/users/matt/documents/visual studio 2015/Projects/angular-rules-engine/angular-rules-engine/src/rules/CompositeRule.ts"],"names":[],"mappings":";;;;;;AAAA,2BAAyB,cAAc,CAAC,CAAA;AACxC,2BAAyB,cAAc,CAAC,CAAA;AAExC;IAAmC,iCAAU;IAKzC,uBAAY,IAAY,EAAE,OAAe;QACrC,kBAAM,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QALhC,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAsB,IAAI,KAAK,EAAc,CAAC;QACrD,UAAK,GAAsB,IAAI,KAAK,EAAc,CAAC;IAInD,CAAC;IAED,8BAAM,GAAN;QAAA,iBAGC;QAFG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC9E,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IACjC,CAAC;IAEM,gCAAQ,GAAf;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,sCAAc,GAAd;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,IAAI,uBAAU,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACL,oBAAC;AAAD,CAAC,AA5BD,CAAmC,uBAAU,GA4B5C;AA5BY,qBAAa,gBA4BzB,CAAA","sourcesContent":["import {RulePolicy} from './RulePolicy';\nimport {RuleResult} from './RuleResult';\n\nexport class CompositeRule extends RulePolicy {\n    hasErrors: boolean = false;\n    results: Array<RuleResult> = new Array<RuleResult>();\n    rules: Array<RulePolicy> = new Array<RulePolicy>();\n\n    constructor(name: string, message: string) {\n        super(name, message, false);\n    }\n\n    render(): RuleResult {\n        this.rules.sort(s => s.priority).forEach(r => this.results.push(r.execute()));\n        return this.processResults();\n    }\n\n    public hasRules(): boolean {\n        if (this.rules && this.rules.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    processResults(): RuleResult {\n        if (this.results.filter(r => (r.isValid === false)).length > 0) {\n            this.isValid = false;\n            this.hasErrors = true;\n        }\n        return new RuleResult(this);\n    }\n}\n"]}